sudo: required

language: node_js
node_js:
  - "stable"

services:
  - docker

before_install:
  - docker build -t ajulibe/multi-docker -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true ajulibe/multi-docker  npm run test -- --coverage

after_success:
  #building the various images
  - docker build -t ajulibe/multi-client ./client
  - docker build -t ajulibe/multi-nginx ./nginx
  - docker build -t ajulibe/multi-server ./server
  - docker build -t ajulibe/multi-worker ./worker
  #Log in to the docker CLI
  - echo "$DOCKER_PASSWORD" | docker login docker.io -u "$DOCKER_ID" --password-stdin
  #Take the images and push it to docker hub
  - docker push ajulibe/multi-client
  - docker push ajulibe/multi-nginx
  - docker push ajulibe/multi-server
  - docker push ajulibe/multi-worker

  #This deploys the whole folder onto elasticbeanstalk so
  #it's the production Dockerfile that would be used by
  #elasticbeanstalk to startup this app
deploy:
  edge: true
  provider: elasticbeanstalk
region: us-east-2 #region you selected when creating the elb application
app: multi-docker #the aws elb app name
env: MultiDocker-env #the aws elb app environment
bucket_name: elasticbeanstalk-us-east-2-709165253790 #s3 storage location for all apps deployed to this region
bucket_path: multi-docker #name of the folder where this app you're targeting is located or going to exist
on:
  branch: master
access_key_id:
  $AWS_ACCESS_KEY #Environment variable generated
  #in IAM of AWS but stored in travis ci
secret_access_key:
  $AWS_SECRET_KEY # Another environment variable
  #generated in IAM of AWS but stored in travis ci
  #commit it
